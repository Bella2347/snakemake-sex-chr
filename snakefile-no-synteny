from snakemake.utils import min_version
min_version("4.4.0")

# Written by Hanna Sigeman, Nov 2019

dir_path = os.getcwd()

##########################################################
######################## PATHS ###########################
##########################################################

ID = config["samples"]
SPECIES = config["species"]
HETEROGAMETIC = config["heterogametic"]
HOMOGAMETIC = config["homogametic"]
FQ_DIR = config["fastq"]
REF_SPECIES = config["ref_species"]
REF_DIR = config["ref_dir"]
REF_NAME = config["ref_name"]
PREFIX = SPECIES + "_ref_" + REF_SPECIES

REF_PATH = REF_DIR + REF_NAME
REF_FASTA = REF_DIR + REF_NAME + ".fasta"
MAP_DIR = "intermediate/bwa/" + REF_NAME + "/"
GENCOV_DIR = "intermediate/bedtools/" + PREFIX + "/"
GENCOV_DIR_REF = "intermediate/bedtools/" + REF_NAME + "/"
VCF_DIR = "intermediate/freebayes/" + PREFIX + "/"
VCF_DIR_REF = "intermediate/freebayes/" + REF_NAME + "/"
RESULTDIR = "results/" + PREFIX + "/"

EDIT_DIST = ["all", "0.0", "0.1", "0.2", "0.3", "0.4"]

##########################################################
######################## RULES ###########################
##########################################################

rule all:
     input:
        REF_FASTA + ".bwt",
        REF_FASTA + ".fai" ,
        expand(MAP_DIR + "{S}.sorted.status", S = ID),
        expand(MAP_DIR + "{S}.sorted.nodup.nm.all.status", S = ID),
        expand(MAP_DIR + "{S}.sorted.nodup.nm.{ED}.bam.bai", S = ID, ED = EDIT_DIST),
        expand(MAP_DIR + "{S}.sorted.flagstat", S = ID),
        expand(MAP_DIR + "{S}.sorted.nodup.nm.{ED}.flagstat", S = ID, ED = EDIT_DIST),
        expand(GENCOV_DIR + SPECIES + ".gencov.nodup.nm.{ED}.out.norm", ED = EDIT_DIST),
        VCF_DIR + SPECIES + ".diffHeterozygosity.bed",
        VCF_DIR + SPECIES + ".biallelic.minQ20.minDP3.vcf",
#        REF_DIR + REF_NAME + "_nonRefAf_consensus.fasta",
        RESULTDIR + SPECIES + ".gencov_indv.pdf",
        RESULTDIR + SPECIES + ".heterozygosity_indv.pdf",
        RESULTDIR + SPECIES + ".circlize.pdf",
        RESULTDIR + SPECIES + ".allFreq.1Mbp.out",
        RESULTDIR + SPECIES + ".allFreq.100kbp.out"

##########################################################
################### INCLUDE SNAKEFILE ####################
##########################################################

include: "snakefile"

##########################################################
################## NO SYNTENY ANALYSIS ###################
##########################################################

rule normalize_cov:
    input:
        GENCOV_DIR + SPECIES + ".gencov.nodup.nm.{ED}.out"
    output:
        GENCOV_DIR + SPECIES + ".gencov.nodup.nm.{ED}.out.norm"
    params:
        hetero = expand("het:{heterogametic}", heterogametic = HETEROGAMETIC),
        homo = expand("homo:{homogametic}", homogametic = HOMOGAMETIC)
    shell:
        """
        python3 code/normalize_coverage.py {input} {params.hetero} {params.homo} > {output}
        """

##########################################################
##################### CONFIRM SEXING #####################
##########################################################

rule confirm_sexing:
    input:
        gencov = GENCOV_DIR + SPECIES + ".gencov.nodup.nm.all.out",
        het = VCF_DIR + SPECIES + ".heterozygosity.bed" 
    output:
        gencov = protected(RESULTDIR + SPECIES + ".gencov_indv.pdf"),
        het = protected(RESULTDIR + SPECIES + ".heterozygosity_indv.pdf")
    params:
        hetero = expand("{heterogametic}", heterogametic = HETEROGAMETIC),
        homo = expand("{homogametic}", homogametic = HOMOGAMETIC)
    threads: 1
    shell:
        """
        Rscript code/histogram_gencov_indv.R {input.gencov} {output.gencov} no-synteny {params.hetero} {params.homo}

        Rscript code/histogram_heterozygosity_indv.R {input.het} {output.het}
        """

##########################################################
################ STATISTICAL CALCULATIONS ################
##########################################################

rule calculate_heterozygosity:
     input:
        VCF_DIR + SPECIES + ".diffHeterozygosity.bed"
     output:
        Mb = RESULTDIR + SPECIES + ".diffHeterozygosity.1Mbp.out",
        kb = RESULTDIR + SPECIES + ".diffHeterozygosity.100kbp.out",
        chr = RESULTDIR + SPECIES + ".diffHeterozygosity.chr.out"
     shell:
        """
        Rscript code/calculate_heterozygosityDiff_windows.R {input} {output.Mb} {output.kb} {output.chr}
        """

rule calculate_allFreq:
    input:
        VCF_DIR + SPECIES + ".allFreq.bed"
    output:
        Mb = RESULTDIR + SPECIES + ".allFreq.1Mbp.out",
        kb = RESULTDIR + SPECIES + ".allFreq.100kbp.out"
    shell:
        """
        Rscript code/calculate_snpCount_windows.R {input} {output.Mb} {output.kb}
        """

rule calculate_ratio:
     input:
        GENCOV_DIR + SPECIES + ".gencov.nodup.nm.{ED}.out.norm"
     output:
        Mb = RESULTDIR + SPECIES + ".gencov.nodup.nm.{ED}.1Mbp.out",
        kb = RESULTDIR + SPECIES + ".gencov.nodup.nm.{ED}.100kbp.out",
        chr = RESULTDIR + SPECIES + ".gencov.nodup.nm.{ED}.chr.out"
     shell:
        """
        Rscript code/calculate_gencov_windows.R {input} {output.Mb} {output.kb} {output.chr}
        """
