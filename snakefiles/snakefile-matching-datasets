##########################################################  
################### MATCHING DATASETS ####################      
########################################################## 

rule matchScaffold2Chr:
    input:
        syns = COMP_GEN_SYNS + SPECIES + "_align_converted",
        gencov = GENCOV_DIR + "genome_5kb_windows.out"
    output:
        windows = MATCHDIR  + "genome_windows.out",
        bestMatch = MATCHDIR + "bestMatch.list",
        log = MATCHDIR + "bestMatch.status"
    params:
        temp = MATCHDIR + "temp/",
        abswindow = dir_path + "/" + MATCHDIR  + "genome_windows.out",
        absBestMatch = dir_path + "/" + MATCHDIR + "bestMatch.list",
        windowsfile= "genome_windows.out",
        absLog = dir_path + "/" + MATCHDIR + "bestMatch.status"
    shell:
        """
        cat {input.syns} | awk '{{print $10,$12,$13,$14,$16,$17,$1}}' | sed 's/ /\t/g' | bedtools intersect -a stdin -b {input.gencov} -wa -wb | awk '{{if($10-$9==\"5000\") print $8,$9,$10,$7,$1,$2,$3,$4,$5,$6}}' | sed 's/ /\t/g' | sed 's/\t/STARTCOORD/' | sed 's/\t/ENDCOORD/' > {output.windows}

        mkdir {params.temp}
        cd {params.temp}
        
        awk \'{{print >> $1; close($1)}}\' {params.abswindow}

        ls | while read file; do cat $file | awk -v max=0 '{{if($2>max){{want=$0; max=$2}}}}END{{print want}}' ; done | sed 's/STARTCOORD/\t/' | sed 's/ENDCOORD/\t/' >> {params.absBestMatch} 

        cd {dir_path}

        rm -r {params.temp}

        echo "DONE" > {params.absLog}
        """

rule matchScaffold2Chr_snp:
    input:
        bestMatch = MATCHDIR + "bestMatch.list",
        heterozygosity = VCF_DIR + SPECIES + ".propHeterozygosity.05.bed"
    output:
        bestmatch = MATCHDIR + SPECIES + ".propHeterozygosity.05.bestMatch." + SYNTENY_SPECIES
        bestmatch_small = MATCHDIR + SPECIES + ".propHeterozygosity.05.bestMatch." + SYNTENY_SPECIES + ".small"
    shell:
        """
        bedtools intersect -a {input.heterozygosity} -b {input.bestMatch} -wa -wb > {output.bestmatch}
        
        cat {output.bestmatch} | cut -f 4,13,14,15 > {output.bestmatch_small}
        """

#rule matchScaffold2Chr_snp:
#    input:
#        bestMatch = MATCHDIR + "bestMatch.list",
#        heterogametic_allDiv = VCF_DIR + SPECIES + ".heterogametic.allDiv.bed",
#        homogametic_allDiv = VCF_DIR + SPECIES + ".homogametic.allDiv.bed"
#    output:
#        bestMatch_allDiv = MATCHDIR + "allDiv.bestMatch." + SYNTENY_SPECIES + ".out"
#    shell:
#        """
#        python3 code/matchScaffold2chr_snp.py {input.bestMatch} {input.heterogametic_allDiv} {input.homogametic_allDiv} > {output.bestMatch_allDiv}
#        """

rule matchScaffold2Chr_cov:
    input:
        bestMatch = MATCHDIR + "bestMatch.list",
        cov = GENCOV_DIR + "gencov.nodup.nm.{ED}.out", # ED = all, 0.0, 0.1, 0.2, 0.3, 0.4
    output:
        MATCHDIR + "gencov.nodup.nm.{ED}.norm." + SYNTENY_SPECIES + ".out"
    threads: 1
    shell:
        """
        python3 code/matchScaffold2chr_cov.py {input.bestMatch} {input.cov} > {output}
        """

